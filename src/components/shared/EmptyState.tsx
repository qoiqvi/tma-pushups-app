'use client';

import { FC } from 'react';
import { Button } from '@/components/ui/button';
import { Card, CardContent } from '@/components/ui/card';
import { 
  Activity, 
  BarChart3, 
  Camera, 
  Trophy, 
  Target, 
  Plus,
  Zap 
} from 'lucide-react';
import { motion } from 'framer-motion';

interface EmptyStateProps {
  variant?: 'workouts' | 'stats' | 'photos' | 'records' | 'sets' | 'generic';
  title?: string;
  message?: string;
  actionLabel?: string;
  onAction?: () => void;
  showAction?: boolean;
  className?: string;
}

export const EmptyState: FC<EmptyStateProps> = ({
  variant = 'generic',
  title,
  message,
  actionLabel,
  onAction,
  showAction = true,
  className
}) => {
  const getEmptyConfig = () => {
    switch (variant) {
      case 'workouts':
        return {
          icon: <Activity className="h-16 w-16" />,
          defaultTitle: '–ü–æ–∫–∞ –Ω–µ—Ç —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫',
          defaultMessage: '–ù–∞—á–Ω–∏—Ç–µ —Å–≤–æ–π –ø—É—Ç—å –∫ –ª—É—á—à–µ–π —Ñ–∏–∑–∏—á–µ—Å–∫–æ–π —Ñ–æ—Ä–º–µ! –°–æ–∑–¥–∞–π—Ç–µ –ø–µ—Ä–≤—É—é —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫—É –∏ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–π—Ç–µ —Å–≤–æ–π –ø—Ä–æ–≥—Ä–µ—Å—Å.',
          defaultActionLabel: '–ù–∞—á–∞—Ç—å —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫—É',
          gradient: 'from-pink-100 to-purple-100 dark:from-pink-950/20 dark:to-purple-950/20',
          iconColor: 'text-pink-500'
        };
      case 'stats':
        return {
          icon: <BarChart3 className="h-16 w-16" />,
          defaultTitle: '–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø—É—Å—Ç–∞',
          defaultMessage: '–í—ã–ø–æ–ª–Ω–∏—Ç–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫, —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å —Å–≤–æ–π –ø—Ä–æ–≥—Ä–µ—Å—Å –∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è –≤ –≥—Ä–∞—Ñ–∏–∫–∞—Ö –∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–µ.',
          defaultActionLabel: '–ö —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞–º',
          gradient: 'from-blue-100 to-cyan-100 dark:from-blue-950/20 dark:to-cyan-950/20',
          iconColor: 'text-blue-500'
        };
      case 'photos':
        return {
          icon: <Camera className="h-16 w-16" />,
          defaultTitle: '–ù–µ—Ç —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π',
          defaultMessage: '–î–æ–±–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ —Å–≤–æ–µ–π —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏, —á—Ç–æ–±—ã –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å –≤–∏–∑—É–∞–ª—å–Ω—ã–π –ø—Ä–æ–≥—Ä–µ—Å—Å –∏ –¥–µ–ª–∏—Ç—å—Å—è –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è–º–∏.',
          defaultActionLabel: '–î–æ–±–∞–≤–∏—Ç—å —Ñ–æ—Ç–æ',
          gradient: 'from-green-100 to-emerald-100 dark:from-green-950/20 dark:to-emerald-950/20',
          iconColor: 'text-green-500'
        };
      case 'records':
        return {
          icon: <Trophy className="h-16 w-16" />,
          defaultTitle: '–ü–æ–∫–∞ –Ω–µ—Ç —Ä–µ–∫–æ—Ä–¥–æ–≤',
          defaultMessage: '–ü—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∞—Ç—å—Å—è, —á—Ç–æ–±—ã —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å–≤–æ–∏ –ø–µ—Ä–≤—ã–µ –ª–∏—á–Ω—ã–µ —Ä–µ–∫–æ—Ä–¥—ã –∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è!',
          defaultActionLabel: '–ù–∞—á–∞—Ç—å —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫—É',
          gradient: 'from-yellow-100 to-orange-100 dark:from-yellow-950/20 dark:to-orange-950/20',
          iconColor: 'text-yellow-500'
        };
      case 'sets':
        return {
          icon: <Target className="h-16 w-16" />,
          defaultTitle: '–ù–µ—Ç –ø–æ–¥—Ö–æ–¥–æ–≤',
          defaultMessage: '–î–æ–±–∞–≤—å—Ç–µ –ø–µ—Ä–≤—ã–π –ø–æ–¥—Ö–æ–¥, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫—É. –ö–∞–∂–¥—ã–π –ø–æ–¥—Ö–æ–¥ –ø—Ä–∏–±–ª–∏–∂–∞–µ—Ç –≤–∞—Å –∫ —Ü–µ–ª–∏!',
          defaultActionLabel: '–î–æ–±–∞–≤–∏—Ç—å –ø–æ–¥—Ö–æ–¥',
          gradient: 'from-purple-100 to-pink-100 dark:from-purple-950/20 dark:to-pink-950/20',
          iconColor: 'text-purple-500'
        };
      default:
        return {
          icon: <Zap className="h-16 w-16" />,
          defaultTitle: '–ü—É—Å—Ç–æ',
          defaultMessage: '–ó–¥–µ—Å—å –ø–æ–∫–∞ –Ω–∏—á–µ–≥–æ –Ω–µ—Ç. –ù–∞—á–Ω–∏—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ, —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã.',
          defaultActionLabel: '–ù–∞—á–∞—Ç—å',
          gradient: 'from-gray-100 to-slate-100 dark:from-gray-950/20 dark:to-slate-950/20',
          iconColor: 'text-gray-500'
        };
    }
  };

  const config = getEmptyConfig();
  const finalTitle = title || config.defaultTitle;
  const finalMessage = message || config.defaultMessage;
  const finalActionLabel = actionLabel || config.defaultActionLabel;

  const handleAction = () => {
    if (onAction) {
      onAction();
      
      // Haptic feedback if available
      if (typeof window !== 'undefined' && window.Telegram?.WebApp?.HapticFeedback) {
        window.Telegram.WebApp.HapticFeedback.impactOccurred('light');
      }
    }
  };

  // Floating animation for the icon
  const floatingAnimation = {
    y: [0, -10, 0],
    transition: {
      duration: 3,
      repeat: Infinity
    }
  };

  // Pulse animation for the background
  const pulseAnimation = {
    scale: [1, 1.05, 1],
    opacity: [0.5, 0.7, 0.5],
    transition: {
      duration: 4,
      repeat: Infinity
    }
  };

  return (
    <Card className={className}>
      <CardContent className="p-8">
        <motion.div
          initial={{ opacity: 0, y: 20 }}
          animate={{ opacity: 1, y: 0 }}
          transition={{ duration: 0.6 }}
          className="text-center space-y-6"
        >
          {/* Animated Background */}
          <div className="relative">
            <motion.div
              animate={pulseAnimation}
              className={`absolute inset-0 w-32 h-32 mx-auto rounded-full bg-gradient-to-br ${config.gradient} blur-xl`}
            />
            
            {/* Icon with Animation */}
            <motion.div
              initial={{ scale: 0.5, opacity: 0 }}
              animate={{ scale: 1, opacity: 1 }}
              transition={{ 
                duration: 0.6, 
                delay: 0.2,
                type: "spring",
                stiffness: 200 
              }}
              className="relative flex justify-center"
            >
              <motion.div
                animate={floatingAnimation}
                className={`p-6 rounded-full bg-gradient-to-br ${config.gradient} ${config.iconColor}`}
              >
                {config.icon}
              </motion.div>
            </motion.div>
          </div>

          {/* Content */}
          <motion.div
            initial={{ opacity: 0 }}
            animate={{ opacity: 1 }}
            transition={{ duration: 0.6, delay: 0.3 }}
            className="space-y-4"
          >
            <h3 className="text-xl font-semibold text-foreground">
              {finalTitle}
            </h3>
            <p className="text-muted-foreground text-sm max-w-md mx-auto leading-relaxed">
              {finalMessage}
            </p>
          </motion.div>

          {/* Action Button */}
          {showAction && onAction && (
            <motion.div
              initial={{ opacity: 0, y: 10 }}
              animate={{ opacity: 1, y: 0 }}
              transition={{ duration: 0.6, delay: 0.4 }}
            >
              <Button
                onClick={handleAction}
                className="bg-pink-gradient hover:opacity-90 text-white"
                size="lg"
              >
                <Plus className="mr-2 h-4 w-4" />
                {finalActionLabel}
              </Button>
            </motion.div>
          )}

          {/* Motivational Message */}
          <motion.div
            initial={{ opacity: 0 }}
            animate={{ opacity: 1 }}
            transition={{ duration: 0.6, delay: 0.5 }}
            className="text-xs text-muted-foreground space-y-1"
          >
            {variant === 'workouts' && (
              <div className="space-y-1">
                <p>üí™ –ö–∞–∂–¥—ã–π —ç–∫—Å–ø–µ—Ä—Ç –∫–æ–≥–¥–∞-—Ç–æ –±—ã–ª –Ω–æ–≤–∏—á–∫–æ–º</p>
                <p>üöÄ –í–∞—à–µ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–µ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å –ø–µ—Ä–≤–æ–≥–æ —à–∞–≥–∞</p>
              </div>
            )}
            {variant === 'stats' && (
              <div className="space-y-1">
                <p>üìà –ü—Ä–æ–≥—Ä–µ—Å—Å –∏–∑–º–µ—Ä—è–µ—Ç—Å—è –ø–æ—Å—Ç–æ—è–Ω—Å—Ç–≤–æ–º</p>
                <p>üéØ –í–∞—à–∏ –ø–µ—Ä–≤—ã–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ —Å–æ–∑–¥–∞–¥—É—Ç –æ—Å–Ω–æ–≤—É –¥–ª—è —Ä–æ—Å—Ç–∞</p>
              </div>
            )}
            {variant === 'records' && (
              <div className="space-y-1">
                <p>üèÜ –†–µ–∫–æ—Ä–¥—ã —Å–æ–∑–¥–∞—é—Ç—Å—è –∫–∞–∂–¥—ã–π –¥–µ–Ω—å</p>
                <p>üíØ –í–∞—à —Å–ª–µ–¥—É—é—â–∏–π –ø–æ–¥—Ö–æ–¥ –º–æ–∂–µ—Ç —Å—Ç–∞—Ç—å –Ω–æ–≤—ã–º –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ–º</p>
              </div>
            )}
          </motion.div>
        </motion.div>
      </CardContent>
    </Card>
  );
};