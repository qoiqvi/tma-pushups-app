import toast from 'react-hot-toast';

// Utility functions for consistent toast messaging
export const showToast = {
  success: (message: string) => {
    toast.success(message);
    
    // Haptic feedback if available
    if (typeof window !== 'undefined' && window.Telegram?.WebApp?.HapticFeedback) {
      window.Telegram.WebApp.HapticFeedback.notificationOccurred('success');
    }
  },

  error: (message: string) => {
    toast.error(message);
    
    // Haptic feedback if available
    if (typeof window !== 'undefined' && window.Telegram?.WebApp?.HapticFeedback) {
      window.Telegram.WebApp.HapticFeedback.notificationOccurred('error');
    }
  },

  loading: (message: string) => {
    return toast.loading(message);
  },

  dismiss: (toastId?: string) => {
    toast.dismiss(toastId);
  },

  promise: <T>(
    promise: Promise<T>,
    messages: {
      loading: string;
      success: string | ((data: T) => string);
      error: string | ((error: any) => string);
    }
  ) => {
    return toast.promise(promise, messages).then((result) => {
      // Success haptic feedback
      if (typeof window !== 'undefined' && window.Telegram?.WebApp?.HapticFeedback) {
        window.Telegram.WebApp.HapticFeedback.notificationOccurred('success');
      }
      return result;
    }).catch((error) => {
      // Error haptic feedback
      if (typeof window !== 'undefined' && window.Telegram?.WebApp?.HapticFeedback) {
        window.Telegram.WebApp.HapticFeedback.notificationOccurred('error');
      }
      throw error;
    });
  }
};

// Predefined messages for common actions
export const toastMessages = {
  // Workout messages
  workout: {
    started: 'üöÄ –¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ –Ω–∞—á–∞–ª–∞—Å—å!',
    paused: '‚è∏Ô∏è –¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ –ø—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞',
    resumed: '‚ñ∂Ô∏è –¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∞',
    finished: 'üéâ –¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!',
    cancelled: '‚ùå –¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞',
    setAdded: '‚úÖ –ü–æ–¥—Ö–æ–¥ –¥–æ–±–∞–≤–ª–µ–Ω',
    setUpdated: 'üìù –ü–æ–¥—Ö–æ–¥ –æ–±–Ω–æ–≤–ª–µ–Ω',
    setDeleted: 'üóëÔ∏è –ü–æ–¥—Ö–æ–¥ —É–¥–∞–ª–µ–Ω',
  },

  // Photo messages
  photo: {
    uploading: 'üì∏ –ó–∞–≥—Ä—É–∂–∞–µ–º —Ñ–æ—Ç–æ...',
    uploaded: '‚úÖ –§–æ—Ç–æ –∑–∞–≥—Ä—É–∂–µ–Ω–æ!',
    processing: 'üîÑ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ñ–æ—Ç–æ...',
    processed: 'üé® –§–æ—Ç–æ –≥–æ—Ç–æ–≤–æ –∫ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏!',
    uploadError: '‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–æ—Ç–æ',
    processError: '‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ñ–æ—Ç–æ',
  },

  // Settings messages
  settings: {
    saved: '‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã',
    saveError: '‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫',
    themeChanged: 'üé® –¢–µ–º–∞ –∏–∑–º–µ–Ω–µ–Ω–∞',
    reminderSet: 'üîî –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ',
    reminderRemoved: 'üîï –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –æ—Ç–∫–ª—é—á–µ–Ω–æ',
  },

  // Share messages
  share: {
    copied: 'üìã –°–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–æ –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞',
    downloaded: 'üíæ –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å–∫–∞—á–∞–Ω–æ',
    shared: 'üì§ –†–µ–∑—É–ª—å—Ç–∞—Ç –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω!',
    shareError: '‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏',
  },

  // Network messages
  network: {
    offline: 'üì¥ –ù–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É',
    online: 'üåê –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ',
    syncError: '‚ö†Ô∏è –û—à–∏–±–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –¥–∞–Ω–Ω—ã—Ö',
    syncSuccess: '‚úÖ –î–∞–Ω–Ω—ã–µ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω—ã',
  },

  // Generic messages
  generic: {
    success: '‚úÖ –£—Å–ø–µ—à–Ω–æ!',
    error: '‚ùå –ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫',
    loading: '‚è≥ –ó–∞–≥—Ä—É–∑–∫–∞...',
    saving: 'üíæ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ...',
    processing: 'üîÑ –û–±—Ä–∞–±–æ—Ç–∫–∞...',
  }
};